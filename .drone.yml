---
kind: pipeline
name: default
platform:
  arch: amd64
  os: linux
services:
  - image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    name: docker
steps:
  - environment:
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
    image: plugins/docker
    name: build_monitor_image
    pull: if-not-exists
    settings:
      dockerfile: Dockerfile
      force_tag: true
      registry: quay.io
      repo: quay.io/ukhomeofficedigital/business-data-manager
      tags:
        - latest
        - ${DRONE_COMMIT_SHA}
        - b${DRONE_BUILD_NUMBER}
    when:
      event:
        - push
  - commands:
      - trivy image --ignore-unfixed --exit-code 0 --no-progress quay.io/ukhomeofficedigital/business-data-manager:${DRONE_COMMIT_SHA}
    image: quay.io/ukhomeofficedigital/trivyscanner:master
    name: trivy_scan
    pull: if-not-exists
    when:
      branch:
        exclude:
          - master
      event:
        - push

  - name: deploy_to_dev
    image: quay.io/ukhomeofficedigital/kd
    pull: if-not-exists
    when:
      branch:
        - master
        - hotfix/*
        - feature/*
      event:
        - promote
        - push
      target:
        exclude:
          - production
    commands:
      - export WHITELIST_RANGES=$${WHITELIST_RANGES_NOTPROD}
      - export NODE_ENV=$${NODE_ENV}
      - export LOG_LEVEL=$${LOG_LEVEL}
      - export HOSTNAME=$${NOTPROD_HOSTNAME}
      - export KEYCLOAK_CLIENT_ID=$${NOTPROD_KEYCLOAK_CLIENT_ID}
      - export KEYCLOAK_CLIENT_SECRET=$${NOTPROD_KEYCLOAK_CLIENT_SECRET}
      - export KEYCLOAK_DISCOVERY=$${NOTPROD_KEYCLOAK_DISCOVERY}
      - export KEYCLOAK_ID=$${NOTPROD_KEYCLOAK_ID}
      - export KEYCLOAK_SECRET=$${NOTPROD_KEYCLOAK_SECRET}
      - export KEYCLOAK_DISCOVERY_URL=$${NOTPROD_KEYCLOAK_DISCOVERY_URL}
      - export KUBE_SERVER=$$NOTPROD_KUBE_SERVER
      - export KUBE_TOKEN=$$NOTPROD_KUBE_TOKEN
      - export RDS_SECRET_NAME=dq-apps-notprod-postgres-rds
      - export DB_ATTRIBUTE=database_name
      - kd -f kube/secret.yml -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml -f kube/cronjobs.yml
    environment:
      ENV: notprod
      INSECURE_SKIP_TLS_VERIFY: true
      KUBE_NAMESPACE: dq-apps-notprod
      LOG_LEVEL:
        from_secret: LOG_LEVEL
      NODE_ENV:
        from_secret: NODE_ENV
      NOTPROD_HOSTNAME:
        from_secret: NOTPROD_HOSTNAME
      NOTPROD_KEYCLOAK_CLIENT_ID:
        from_secret: NOTPROD_KEYCLOAK_CLIENT_ID
      NOTPROD_KEYCLOAK_CLIENT_SECRET:
        from_secret: NOTPROD_KEYCLOAK_CLIENT_SECRET
      NOTPROD_KEYCLOAK_DISCOVERY:
        from_secret: NOTPROD_KEYCLOAK_DISCOVERY
      NOTPROD_KEYCLOAK_DISCOVERY_URL:
        from_secret: NOTPROD_KEYCLOAK_DISCOVERY_URL
      NOTPROD_KEYCLOAK_ID:
        from_secret: NOTPROD_KEYCLOAK_ID
      NOTPROD_KEYCLOAK_SECRET:
        from_secret: NOTPROD_KEYCLOAK_SECRET
      NOTPROD_KUBE_SERVER:
        from_secret: NOTPROD_KUBE_SERVER
      NOTPROD_KUBE_TOKEN:
        from_secret: NOTPROD_KUBE_TOKEN
      WHITELIST_RANGES_NOTPROD:
        from_secret: WHITELIST_RANGES_NOTPROD

  - name: deploy_to_staging
    image: quay.io/ukhomeofficedigital/kd
    pull: if-not-exists
    when:
      branch:
        - master
        - hotfix/*
      event:
        - promote
      target:
        - staging
    commands:
      - export WHITELIST_RANGES=$${WHITELIST_RANGES_NOTPROD}
      - export NODE_ENV=$${NODE_ENV}
      - export LOG_LEVEL=$${LOG_LEVEL}
      - export HOSTNAME=$${STAGING_HOSTNAME}
      - export KEYCLOAK_CLIENT_ID=$${NOTPROD_KEYCLOAK_CLIENT_ID}
      - export KEYCLOAK_CLIENT_SECRET=$${NOTPROD_KEYCLOAK_CLIENT_SECRET}
      - export KEYCLOAK_DISCOVERY=$${NOTPROD_KEYCLOAK_DISCOVERY}
      - export KEYCLOAK_ID=$${NOTPROD_KEYCLOAK_ID}
      - export KEYCLOAK_SECRET=$${NOTPROD_KEYCLOAK_SECRET}
      - export KEYCLOAK_DISCOVERY_URL=$${NOTPROD_KEYCLOAK_DISCOVERY_URL}
      - export KUBE_SERVER=$$PROD_KUBE_SERVER
      - export KUBE_TOKEN=$$STAGING_KUBE_TOKEN
      - export RDS_SECRET_NAME=dq-apps-bdm-staging-rds
      - export DB_ATTRIBUTE=db_name
      - export PGHOST=$${STAGING_PGHOST}
      - export PGPORT=$${STAGING_PGPORT}
      - export PGUSER=$${STAGING_PGUSER}
      - export PGDATABASE=$${STAGING_PGDATABASE}
      - export PGPASSWORD=$${STAGING_PGPASSWORD}
      - export SESSION_SECRET=$${STAGING_SESSION_SECRET}
      - kd -f kube/secret.yml -f kube/dq-staging-rds-secret.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml -f kube/deployment.yml -f kube/cronjobs.yml
    environment:
      ENV: prod
      INSECURE_SKIP_TLS_VERIFY: true
      KUBE_NAMESPACE: dq-apps-staging
      LOG_LEVEL:
        from_secret: LOG_LEVEL
      NODE_ENV:
        from_secret: NODE_ENV
      NOTPROD_KEYCLOAK_CLIENT_ID:
        from_secret: NOTPROD_KEYCLOAK_CLIENT_ID
      NOTPROD_KEYCLOAK_CLIENT_SECRET:
        from_secret: NOTPROD_KEYCLOAK_CLIENT_SECRET
      NOTPROD_KEYCLOAK_DISCOVERY:
        from_secret: NOTPROD_KEYCLOAK_DISCOVERY
      NOTPROD_KEYCLOAK_DISCOVERY_URL:
        from_secret: NOTPROD_KEYCLOAK_DISCOVERY_URL
      NOTPROD_KEYCLOAK_ID:
        from_secret: NOTPROD_KEYCLOAK_ID
      NOTPROD_KEYCLOAK_SECRET:
        from_secret: NOTPROD_KEYCLOAK_SECRET
      PROD_KUBE_SERVER:
        from_secret: PROD_KUBE_SERVER
      STAGING_HOSTNAME:
        from_secret: STAGING_HOSTNAME
      STAGING_KUBE_TOKEN:
        from_secret: STAGING_KUBE_TOKEN
      STAGING_PGDATABASE:
        from_secret: STAGING_PGDATABASE
      STAGING_PGHOST:
        from_secret: STAGING_PGHOST
      STAGING_PGPASSWORD:
        from_secret: STAGING_PGPASSWORD
      STAGING_PGPORT:
        from_secret: STAGING_PGPORT
      STAGING_PGUSER:
        from_secret: STAGING_PGUSER
      STAGING_SESSION_SECRET:
        from_secret: STAGING_SESSION_SECRET
      WHITELIST_RANGES_NOTPROD:
        from_secret: WHITELIST_RANGES_NOTPROD

  - name: deploy_to_prod
    image: quay.io/ukhomeofficedigital/kd
    pull: if-not-exists
    when:
      branch:
        - master
        - hotfix/*
      event:
        - promote
      target:
        - production
    commands:
      - export WHITELIST_RANGES=$${WHITELIST_RANGES}
      - export NODE_ENV=$${NODE_ENV}
      - export LOG_LEVEL=$${LOG_LEVEL}
      - export HOSTNAME=$${PROD_HOSTNAME}
      - export KEYCLOAK_CLIENT_ID=$${PROD_KEYCLOAK_CLIENT_ID}
      - export KEYCLOAK_CLIENT_SECRET=$${PROD_KEYCLOAK_CLIENT_SECRET}
      - export KEYCLOAK_DISCOVERY=$${PROD_KEYCLOAK_DISCOVERY}
      - export KEYCLOAK_ID=$${PROD_KEYCLOAK_ID}
      - export KEYCLOAK_SECRET=$${PROD_KEYCLOAK_SECRET}
      - export KEYCLOAK_DISCOVERY_URL=$${PROD_KEYCLOAK_DISCOVERY_URL}
      - export KUBE_SERVER=$$PROD_KUBE_SERVER
      - export KUBE_TOKEN=$$PROD_KUBE_TOKEN
      - export RDS_SECRET_NAME=dq-apps-bdm-prod-rds
      - export DB_ATTRIBUTE=db_name
      - kd -f kube/secret.yml -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml -f kube/cronjobs.yml
    environment:
      ENV: prod
      INSECURE_SKIP_TLS_VERIFY: true
      KUBE_NAMESPACE: dq-apps
      LOG_LEVEL:
        from_secret: LOG_LEVEL
      NODE_ENV:
        from_secret: NODE_ENV
      PROD_HOSTNAME:
        from_secret: PROD_HOSTNAME
      PROD_KEYCLOAK_CLIENT_ID:
        from_secret: PROD_KEYCLOAK_CLIENT_ID
      PROD_KEYCLOAK_CLIENT_SECRET:
        from_secret: PROD_KEYCLOAK_CLIENT_SECRET
      PROD_KEYCLOAK_DISCOVERY:
        from_secret: PROD_KEYCLOAK_DISCOVERY
      PROD_KEYCLOAK_DISCOVERY_URL:
        from_secret: PROD_KEYCLOAK_DISCOVERY_URL
      PROD_KEYCLOAK_ID:
        from_secret: PROD_KEYCLOAK_ID
      PROD_KEYCLOAK_SECRET:
        from_secret: PROD_KEYCLOAK_SECRET
      PROD_KUBE_SERVER:
        from_secret: PROD_KUBE_SERVER
      PROD_KUBE_TOKEN:
        from_secret: PROD_KUBE_TOKEN
      WHITELIST_RANGES:
        from_secret: WHITELIST_RANGES
type: kubernetes
workspace:
  path: /go/src/gitlab.digital.homeoffice.gov.uk/${DRONE_REPO}
